/*
 * triangle.cpp -- A simple example of OpenGL and GLUT.
 * Authors: Max Wittmann and Scott McCallum
 * Date: February 2012
 */

#include <GL/glut.h>

void init(void)   /* initialization function  */
{
	glClearColor(0.0, 0.0, 0.0, 0.0); /* set background color to black */
	glColor3f(1.0, 1.0, 1.0); /* set drawing color to white */
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, 400, 0, 500); /* defines world window */
}

void displayCB(void) /* display callback function,
                        called for initial display and
                        whenever redisplay needed */
{
	glClear( GL_COLOR_BUFFER_BIT); /* clear the screen window */
	glBegin( GL_POLYGON); /* draw filled triangle */
	  glVertex2i(200, 125); /* specify each vertex of triangle */
	  glVertex2i(100, 375);
	  glVertex2i(300, 375);
	glEnd(); /* OpenGL draws the filled triangle */
	glFlush(); /* Complete any pending operations */
}

void keyCB(unsigned char key, int x, int y) /* keyboard callback function,
                                               called on key press */
{
	if (key == 'q')
		exit(0);
}

int main(int argc, char *argv[]) {
	glutInit(&argc, argv); /* initialize GLUT system */
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(400, 500); /* width=400pixels height=500pixels */
	glutCreateWindow("Triangle"); /* create window */
	glutDisplayFunc(displayCB); /* register display callback function*/
	glutKeyboardFunc(keyCB); /* register keyboard callback function*/
    init();      /* call init */
	glutMainLoop(); /* start processing events... */
	/* execution never reaches this point */
	return 0;
}
